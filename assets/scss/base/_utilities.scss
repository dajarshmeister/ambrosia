/* === Layout === */

.wrapper {
	max-width: $wrapper;
	margin: 0 auto;
}

.container {
	@include container;
}

.section {
	@include section;
}

/* === Utilities === */

$utilities: (
	'text-align': (
		'prefix': 'text',
		'values': (
			'center': center,
		),
	),
);

/* === Grid === */

$template-columns: 12;
$columns: 12;
$tracks: 13;
$gap: 6;
$order: 2;

[class*='grid'] {
	gap: $grid-gap;
	display: grid;
}

@each $breakpoint, $val in $breakpoints {
	@if ($breakpoint == 'sm') {
		@for $i from 1 through $template-columns {
			.grid-#{$i} {
				display: grid;
				gap: $grid-gap;
				grid-template-columns: repeat(#{$i}, 1fr);
			}
		}
		@for $i from 1 through $columns {
			.col-#{$i} {
				grid-column: span #{$i};
			}
		}
		@for $i from 1 through $tracks {
			.col-start-#{$i} {
				grid-column-start: #{$i};
			}
		}
		@for $i from 1 through $tracks {
			.col-end-#{$i} {
				grid-column-end: #{$i};
			}
		}
		@for $i from 1 through $order {
			.order-#{$i} {
				order: #{$i};
			}
		}
		@for $i from 0 through $gap {
			.gap-#{$i} {
				display: grid;
				gap: #{$i}rem !important;
			}
		}
		@for $i from 0 through $gap {
			.row-gap-#{$i} {
				display: grid;
				row-gap: #{$i}rem !important;
			}
		}

		@each $property, $map in $utilities {
			$prefix: map-get($map, 'prefix');
			$values: map-get($map, 'values');

			@each $k, $v in $values {
				.#{$prefix}-#{$k} {
					#{$property}: $v !important;
				}
			}
		}
	} @else {
		@media (min-width: $val) {
			@for $i from 1 through $template-columns {
				.grid-#{$breakpoint}-#{$i} {
					display: grid;
					gap: $grid-gap;
					grid-template-columns: repeat(#{$i}, 1fr);
				}
			}
			@for $i from 1 through $columns {
				.col-#{$breakpoint}-#{$i} {
					grid-column: span #{$i};
				}
			}
			@for $i from 1 through $tracks {
				.col-start-#{$breakpoint}-#{$i} {
					grid-column-start: #{$i};
				}
			}
			@for $i from 1 through $tracks {
				.col-end-#{$breakpoint}-#{$i} {
					grid-column-end: #{$i};
				}
			}
			@for $i from 1 through $order {
				.order-#{$breakpoint}-#{$i} {
					order: #{$i};
				}
			}
			@for $i from 0 through $gap {
				.gap-#{$breakpoint}-#{$i} {
					display: grid;
					gap: #{$i}rem !important;
				}
			}

			@for $i from 0 through $gap {
				.row-gap-#{$breakpoint}-#{$i} {
					display: grid;
					row-gap: #{$i}rem !important;
				}
			}
			@each $property, $map in $utilities {
				$prefix: map-get($map, 'prefix');
				$values: map-get($map, 'values');

				@each $k, $v in $values {
					.#{$prefix}-#{$breakpoint}-#{$k} {
						#{$property}: $v;
					}
				}
			}
		}
	}
}
